+ remove python, and integrate luajit. make it compilable
+ expose callback handlers:
    + game.on_mouseclick
        added script_pcallback, script_register_callback for general callback invocation
- expose the app instance as game.app
    + game.app.setup_scene() -- to draw something on setup later
    - maybe: game.app.add_entity( filename, x,y,z )
- implement actor logic (maybe concurrently)
    - e = game.entity.new( filename, x, y, z )
    - e:update() <-- concurrent
    - e:move( x,y,z )
- create logic in lua to render a labyrinth with models.
+ find out how to do path finding, and implement in lua
- https://code.google.com/p/simple-lua-wrapper/source/browse/LuaWrapper.h
- great thread on gamedev where the OP outlines the way he does C++ class binding without external dependencies
  http://www.gamedev.net/community/forums/topic.asp?topic_id=571139
- in the same way http://lua-users.org/wiki/DoItYourselfCppBinding

-- http://luakit.org/projects/luakit
-- user data official doc http://www.lua.org/pil/28.1.html
-- lua faq http://www.luafaq.org/

